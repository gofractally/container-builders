name: Generate ubuntu builder images
# Generates an image that encapsulate an environment on which it is possible to build psibase.

env:
  GITHUB_OUTPUT: ""

on:
  workflow_call:
    inputs:
      is_pr:
        description: "Is 'true' if running in the context of a PR"
        type: boolean
        required: true
        default: true
      ubuntu_version:
        description: "On what version of ubuntu should the build run?"
        type: string
        required: true
        default: "2204"

jobs:
  ubuntu-builder:
    name: psibase-builder-ubuntu-${{ inputs.ubuntu_version }}
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0

      - name: Free up runner space
        run: bash ${GITHUB_WORKSPACE}/.github/scripts/free-disk-space.sh

      - name: Preparation
        id: prep
        run: |
          OWNER="${{ github.repository_owner }}"
          IMAGE="psibase-builder-ubuntu-${{ inputs.ubuntu_version }}"
          if [[ "${{ inputs.is_pr }}" == "true" ]]; then
            REGISTRY="localhost:5000"
            TAG="latest"
          else
            REGISTRY="ghcr.io"
            TAG="${{ github.sha }}"
          fi
          TAGS="${REGISTRY}/${OWNER}/${IMAGE}:${TAG}"
          echo "tags=${TAGS,,}" >> $GITHUB_OUTPUT

      - name: Building ${{ steps.prep.outputs.tags }}
        run: true

      - name: (PR only) - Config docker buildx network
        if: ${{ inputs.is_pr }}
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug
          driver-opts: network=host

      - name: Login in to registry
        if: ${{ !inputs.is_pr }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Publish Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: docker/ubuntu-${{ inputs.ubuntu_version }}-builder.Dockerfile
          tags: ${{ steps.prep.outputs.tags }}
          platforms: linux/amd64
          outputs: type=image,annotation-index.org.opencontainers.image.description=Psibase build environment based on Ubuntu ${{ inputs.ubuntu_version }}

      - name: (PR only) - Save docker image to archive
        if: ${{ inputs.is_pr }}
        run: |
          docker pull ${{ steps.prep.outputs.tags }}
          docker save ${{ steps.prep.outputs.tags }} -o builder-${{ inputs.ubuntu_version }}-image.tar

      - name: (PR only) - Upload docker image archive
        if: ${{ inputs.is_pr }}
        uses: actions/upload-artifact@v4
        with:
          name: builder-${{ inputs.ubuntu_version }}-image
          path: builder-${{ inputs.ubuntu_version }}-image.tar
          retention-days: 1
