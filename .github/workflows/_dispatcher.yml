# This file is the dispatcher for the rest of the workflows that have complex dependencies.
# The `cli.yml` doesn't need to be dispatched via this dispatcher because it is only run manually.

name: Dispatcher

env:
  GITHUB_OUTPUT: ""

on:
  push:
    branches:
      - main
    paths:
      - "docker/**"
      - ".github/**"
      - "!.github/workflows/cli.yml"
      - "!docker/psibase.Dockerfile"
      - "!docker/psinode.Dockerfile"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "docker/**"
      - ".github/**"
      - "!.github/workflows/cli.yml"
      - "!docker/psibase.Dockerfile"
      - "!docker/psinode.Dockerfile"

jobs:
  determine-actions:
    name: Set up the dispatching variables
    runs-on: ubuntu-latest
    outputs:
      pr: ${{ steps.conditionals.outputs.pr }}
      run_2004: ${{ steps.schedule-builders.outputs.run_2004 }}
      build_strategy: ${{ steps.schedule-builders.outputs.build_strategy }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0

      - name: Determine artifact registry
        id: conditionals
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "pr=true" >> $GITHUB_OUTPUT
          fi

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42

      - name: Print changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in $ALL_CHANGED_FILES; do
            echo $file
          done

      - name: Determine what to dispatch
        id: schedule-builders
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          necessary_jobs=$(./.github/scripts/check-patterns.sh "$ALL_CHANGED_FILES")  

          declare -A strategies
          strategies["000"]="0"
          strategies["001"]="1"
          strategies["010"]="2"
          strategies["011"]="2"
          strategies["100"]="3"
          strategies["101"]="3"
          strategies["110"]="4"
          strategies["111"]="4"

          read -r run_2004 strat_key <<< "$output"
          echo "run_2004=${run_2004}" >> $GITHUB_OUTPUT
          echo "build_strategy=${strategies[strat_key]}" >> $GITHUB_OUTPUT

# Possible dispatching scenarios (excluding 2004 builder which is fully independent)
# 0: don't run anything
# 1: run contributor
# 2: run 2204_builder & contributor
# 3: run tool_config & contributor
# 4: run tool_config & 2204_builder & contributor

# Handle 2004 builder independently
  handle-2004:
    name: "Build 20.04 builder"
    needs: determine-actions
    if: ${{ needs.determine-actions.outputs.run_2004 == '1' }}
    uses: ./.github/workflows/builder-ubuntu.yml
    with:
      is_pr: ${{ needs.determine-actions.outputs.pr == 'true' }}
      ubuntu_version: "2004"

# CASE 0
  do-nothing:
    name: "Not building anything"
    needs: determine-actions
    if: ${{ needs.determine-actions.outputs.build_strategy == '0' }}
    runs-on: ubuntu-latest
    steps:
      - name: noop
        run: true


# CASE 1
  build-contributor:
    name: "Build contributor"
    needs: determine-actions
    if: ${{ needs.determine-actions.outputs.build_strategy == '1' }}
    uses: ./.github/workflows/contributor.yml
    with:
      is_pr: ${{ needs.determine-actions.outputs.pr == 'true' }}
      is_local_tools: false
      is_local_base: false


# CASE 2
  build-2204-and-contrib-1:
    name: "Build 22.04 builder"
    needs: determine-actions
    if: ${{ needs.determine-actions.outputs.build_strategy == '2' }}
    uses: ./.github/workflows/builder-ubuntu.yml
    with:
      is_pr: ${{ needs.determine-actions.outputs.pr == 'true' }}
      ubuntu_version: "2204"

  build-2204-and-contrib-2:
    name: "Build psibase contributor"
    needs: [determine-actions, build-2204-and-contrib-1]
    if: ${{ needs.determine-actions.outputs.build_strategy == '2' }}
    uses: ./.github/workflows/contributor.yml
    with:
      is_pr: ${{ needs.determine-actions.outputs.pr == 'true' }}
      is_local_tools: false
      is_local_base: true


# CASE 3
  build-tc-and-contrib-1: 
    name: "Build tool config"
    needs: determine-actions
    if: ${{ needs.determine-actions.outputs.build_strategy == '3' }}
    uses: ./.github/workflows/tool-config.yml
    with:
      is_pr: ${{ needs.determine-actions.outputs.pr == 'true' }}

  build-tc-and-contrib-2:
    name: "Build psibase contributor"
    needs: [determine-actions, build-tc-and-contrib-1]
    if: ${{ needs.determine-actions.outputs.build_strategy == '3' }}
    uses: ./.github/workflows/contributor.yml
    with:
      is_pr: ${{ needs.determine-actions.outputs.pr == 'true' }}
      is_local_tools: true
      is_local_base: false


# CASE 4
  build-all-1:
    name: "Build tool config"
    needs: determine-actions
    if: ${{ needs.determine-actions.outputs.build_strategy == '4' }}
    uses: ./.github/workflows/tool-config.yml
    with:
      is_pr: ${{ needs.determine-actions.outputs.pr == 'true' }}

  build-all-2:
    name: "Build 22.04 builder"
    needs: determine-actions
    if: ${{ needs.determine-actions.outputs.build_strategy == '4' }}
    uses: ./.github/workflows/builder-ubuntu.yml
    with:
      is_pr: ${{ needs.determine-actions.outputs.pr == 'true' }}
      ubuntu_version: "2204"

  build-all-3:
    name: "Build psibase contributor"
    needs: [determine-actions, build-all-1, build-all-2]
    if: ${{ needs.determine-actions.outputs.build_strategy == '4' }}
    uses: ./.github/workflows/contributor.yml
    with:
      is_pr: ${{ needs.determine-actions.outputs.pr == 'true' }}
      is_local_tools: true
      is_local_base: true
