name: Generate tool-config images

env:
  GITHUB_OUTPUT: ""

on:
  workflow_call:
    inputs:
      is_pr:
        description: "Is 'true' if running in the context of a PR"
        type: boolean
        required: true
        default: true

jobs:
  tool-config:
    name: tool-config
    runs-on: ubuntu-latest
    strategy:
      matrix:
        protocol: ["http", "https"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: false
          fetch-depth: 0

      - name: Preparation
        id: prep
        run: |
          OWNER="${{ github.repository_owner }}"
          IMAGE="${{ matrix.protocol }}-tool-config"
          REGISTRY="ghcr.io"
          TAG="${{ github.sha }}"
          TAGS="${REGISTRY}/${OWNER}/${IMAGE}:${TAG}"
          echo "tags=${TAGS,,}" >> $GITHUB_OUTPUT

      - name: Building ${{ steps.prep.outputs.tags }}
        run: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'arm64'

      - name: Config docker buildx network
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Login in to registry
        if: ${{ !inputs.is_pr }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Publish Image
        if: ${{ !inputs.is_pr }}
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: docker/tool-config.Dockerfile
          build-args: |
            protocol=${{ matrix.protocol }}
          tags: ${{ steps.prep.outputs.tags }}
          platforms: linux/amd64,linux/arm64
          outputs: type=image,annotation-index.org.opencontainers.image.description=Config files for admin-sys dashboard tools connecting to psinode over ${{ matrix.protocol }} on 8080

      - name: (PR Only) - Build image archive
        if: ${{ inputs.is_pr }}
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/tool-config.Dockerfile
          build-args: |
            protocol=${{ matrix.protocol }}
          tags: ${{ steps.prep.outputs.tags }}
          platforms: linux/amd64
          outputs: type=docker,dest=${{ matrix.protocol }}-tool-config-image.tar

      - name: (PR Only) - Build separate arm image archive
        if: ${{ inputs.is_pr }}
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/tool-config.Dockerfile
          build-args: |
            protocol=${{ matrix.protocol }}
          tags: ${{ steps.prep.outputs.tags }}
          platforms: linux/arm64
          outputs: type=docker,dest=${{ matrix.protocol }}-tool-config-arm-image.tar

      - name: (PR only) - Upload image archive as artifact
        if: ${{ inputs.is_pr }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.protocol }}-tool-config-image
          path: ${{ matrix.protocol }}-tool-config-image.tar
          retention-days: 1

      - name: (PR only) - Upload arm image archive as artifact
        if: ${{ inputs.is_pr }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.protocol }}-tool-config-arm-image
          path: ${{ matrix.protocol }}-tool-config-arm-image.tar
          retention-days: 1